name: Telegram Notify

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare Changed Files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Получаем SHA предыдущего коммита на ветке до пуша
            PREVIOUS_SHA=$(git rev-parse ${{ github.sha }}^)
            # Сравниваем текущее состояние с предыдущим
            files=$(git diff --name-only $PREVIOUS_SHA ${{ github.sha }} | sed 's/^/- `/' | sed 's/$/`/')
          else
            files=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              ${{ github.event.pull_request._links.commits.href }} | \
              jq -r '.[] | .sha' | xargs -I {} git diff --name-only {}^ {} | sort -u | sed 's/^/- `/' | sed 's/$/`/')
          fi
          if [ -z "$files" ]; then
            files="- `Нет измененных файлов`"
          fi
          echo "Files detected: $files"
          echo "CHANGED_FILES<<EOF" >> $GITHUB_OUTPUT
          echo "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Telegram Message
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            EVENT_TYPE="Пуш"
          else
            EVENT_TYPE="Мердж"
          fi
          MESSAGE=$(printf "Событие: *%s*\nРепозиторий: _%s_\nАвтор: _%s_\nВетка: _%s_\nСообщение: _%s_\nИзмененные файлы:\n%s\n[Ссылка](https://github.com/%s/commit/%s)" \
            "$EVENT_TYPE" \
            "${{ github.repository }}" \
            "${{ github.actor }}" \
            "${{ github.ref_name }}" \
            "${{ github.event.commits[0].message || github.event.pull_request.title }}" \
            "${{ steps.changed-files.outputs.CHANGED_FILES }}" \
            "${{ github.repository }}" \
            "${{ github.sha }}")
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_TO }}" \
            -d message_thread_id="${{ secrets.TELEGRAM_THREAD_ID }}" \
            -d parse_mode="Markdown" \
            -d "text=$MESSAGE"
